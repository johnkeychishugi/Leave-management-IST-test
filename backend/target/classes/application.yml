spring:
  application:
    name: Leave Management System
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/leave_management}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:chishugi654321}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 5
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        use_sql_comments: true
        # Using standard Hibernate naming strategies
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
        cache:
          use_second_level_cache: false
          use_query_cache: false
  security:
    oauth2:
      client:
        registration:
          microsoft:
            client-id: ${AZURE_CLIENT_ID:53eff39c-85a0-4c3c-8e4f-da0f57fd5db5}
            client-secret: ${AZURE_CLIENT_SECRET:GRN8Q~3OhSDNKSvwm07ZFoSjwIiUF5z.O6RvGcmy}
            scope: openid,profile,email,User.Read
            redirect-uri: ${OAUTH2_REDIRECT_URI:http://localhost:3000/oauth2/redirect}
            authorization-grant-type: authorization_code
        provider:
          microsoft:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            jwk-set-uri: https://login.microsoftonline.com/common/discovery/v2.0/keys
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: name
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:placeholder}
    password: ${MAIL_PASSWORD:placeholder}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    contentnegotiation:
      favor-parameter: false
      favor-path-extension: false
      defaultContentType: application/json
      mediaTypes:
        json: application/json
        yaml: application/yaml
  jackson:
    serialization:
      INDENT_OUTPUT: true
      WRITE_DATES_AS_TIMESTAMPS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    default-property-inclusion: non_null

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: true

# Custom application properties
app:
  jwt-secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
  jwt-expiration-milliseconds: 86400000
  allowed-domains: ${ALLOWED_DOMAINS:ist.com}
  document-storage:
    type: ${STORAGE_TYPE:local}  # local or s3
    local-path: ${LOCAL_STORAGE_PATH:uploads}
    s3:
      bucket-name: ${S3_BUCKET:lms-documents}
      region: ${S3_REGION:us-east-1}
      access-key: ${S3_ACCESS_KEY:placeholder}
      secret-key: ${S3_SECRET_KEY:placeholder}

# Logging configuration
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate: INFO
    com.ist.lms: DEBUG
    com.ist.lms.security: DEBUG 